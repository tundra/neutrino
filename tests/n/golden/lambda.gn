# Plain lambdas.

-- INPUT: (fn => 4)()
-- VALUE: 4

-- INPUT: (fn => fn => 7)()()
-- VALUE: 7

-- INPUT: (fn ($x) => 4)(8)
-- VALUE: 4

-- INPUT: (fn ($x, $y) => 5)(9, 10)
-- VALUE: 5

-- INPUT: (fn ($x, $y, $z) => 6)(11, 12, 13)
-- VALUE: 6

-- INPUT: (fn ($x) => $x)(8)
-- VALUE: 8

-- INPUT: (fn ($x, $y) => $x)(9, 10)
-- VALUE: 9

-- INPUT: (fn ($x, $y) => $y)(9, 10)
-- VALUE: 10

-- INPUT: (fn ($f, $x) => $f($x))(fn ($x) => ($x + 3), 6)
-- VALUE: 9


# Capturing outer variables.

-- INPUT: {
  def $outer := (fn $x => fn $y => $x + $y);
  def $inner := $outer(5);
  $inner(6);
}
-- VALUE: 11

-- INPUT: {
  def $grand_outer := (fn $x => fn $y => fn $z => $x - $y + $z);
  def $outer := $grand_outer(9);
  def $inner := $outer(10);
  $inner(11);
}
-- VALUE: 10

-- INPUT: {
  def $x := 4;
  def $y := 5;
  def $fun := (fn => $y - $x);
  $fun();
}
-- VALUE: 1

-- INPUT: {
  def $outer := 5;
  def $fun := (fn => $outer + $outer + $outer);
  $fun();
}
-- VALUE: 15
