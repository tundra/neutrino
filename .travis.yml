# The default build. It really makes no difference which target is the default
# and which are defined though the build matrix.
language: c
compiler: gcc
script: ./configure --noisy && ./build.sh run-tests
install: ./tools/create-virtualenv.sh

matrix:
  include:
    # Test a clang build in debug mode under valgrind.
    - language: c
      compiler: clang
      script: ./configure --debug --valgrind --noisy && ./build.sh run-tests
      install: ./tools/create-virtualenv.sh && sudo apt-get update && sudo apt-get install valgrind
    # Test a debug build with expensive checks but not under valgrind.
    - language: c
      compiler: clang
      script: ./configure --debug --expchecks --noisy && ./build.sh run-ctrino-tests
      install: ./tools/create-virtualenv.sh
    # Test everything using an optimized clang build.
    - language: c
      compiler: clang
      script: ./configure --noisy && ./build.sh run-ctrino-tests
      install: ./tools/create-virtualenv.sh
    # Test with checks disabled.
    - languate: c
      compiler: clang
      script: ./configure --nochecks --noisy && ./build.sh run-ctrino-tests
      install: ./tools/create-virtualenv.sh
    # Check that the C code compiles using gcc.
    - language: c
      compiler: gcc
      script: ./configure --debug --noisy && ./build.sh run-ctrino-tests
      install: ./tools/create-virtualenv.sh
